@model Common.Order

@{
    ViewBag.Title = "EditOrder";
    string _role = Common.Constants.COOKIE_ROLE;
    string _admin = Common.Constants.ADMIN;
    string _aprove = Common.Constants.APROVE;
    string _deliver = Common.Constants.DELIVER;
    string _paid = Common.Constants.PAID;
}

<h2>EditOrder</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Order</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.OrderId)
    @Html.HiddenFor(model => model.ProductId)
    @Html.HiddenFor(model => model.UserId)
    @Html.HiddenFor(model => model.UserName)
    @Html.HiddenFor(model => model.Count)

    <div class="form-group">
        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    
    <div class="form-group">
        @Html.LabelFor(model => model.Product.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Product.Name, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Product.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Product.Cost, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Count, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Count, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Count, "", new { @class = "text-danger" })
        </div>
    </div>

    @if (Request.Cookies[_role] != null)
    {
        if (Request.Cookies[_role].Value == _admin)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    <select class="form-control" name="Status" id="Status">
                        @if (Model.Status == _aprove)
                        {
                        <option value="@_aprove" selected>Aprooved</option>
                        <option value="@_deliver">Deliver</option>
                        <option value="@_paid">Paid</option>
                        }
                        else if (Model.Status == _deliver)
                        {
                        <option value="@_aprove" >Aprooved</option>
                        <option value="@_deliver" selected>Deliver</option>
                        <option value="@_paid">Paid</option>
                        }
                        else if (Model.Status == _paid)
                        {
                        <option value="@_aprove" >Aprooved</option>
                        <option value="@_deliver" selected>Deliver</option>
                        <option value="@_paid" selected>Paid</option>
                        }
                        else
                        {
                        <option value="@_aprove" >Aprooved</option>
                        <option value="@_deliver" >Deliver</option>
                        <option value="@_paid">Paid</option>
                        }
                    </select>

                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
        }
    }


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
        @ViewBag.Message
    </div>
</div>
}

<div>
    @if (Request.UrlReferrer != null)
    {
        if (Request.Url.AbsolutePath != Request.UrlReferrer.AbsolutePath)
        {
            <a href="@Request.UrlReferrer.AbsolutePath">Back</a>
        }
        else
        {
            @Html.ActionLink("Back To Orders", "Orders");
        }
    }
    else
    {
        @Html.ActionLink("Back To Orders", "Orders");
    }
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
