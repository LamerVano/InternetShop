@model Common.Category

@{
    ViewBag.Title = "Edit";
    string _role = Common.Constants.COOKIE_ROLE;
    string _moder = Common.Constants.MODER;
    string _admin = Common.Constants.ADMIN;
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Category</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CategoryId)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if(Request.Cookies[_role] != null)
            {
                if(Request.Cookies[_role].Value == _moder || Request.Cookies[_role].Value == _admin)
                {
                    
                   <input type="submit" value="Save" class="btn btn-default" />  
                }
            }
            </div>
            @ViewBag.Message
        </div>
    </div>
}

<div>

    @Html.ActionLink("Back to Categories", "Main", new { }, new { @class = "btn btn-default" })
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
